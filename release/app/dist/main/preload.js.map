{"version":3,"file":"preload.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,QAAQ,I,mBCTX,MAAM,EAA+BC,QAAQ,YCMvCC,EAAkB,CACtBC,YAAa,CACX,WAAAC,CAAYC,KAAsBC,GAChC,EAAAH,YAAYI,KAAKF,KAAYC,EAC/B,EACA,EAAAE,CAAGH,EAAmBI,GACpB,MAAMC,EAAe,CAACC,KAA6BL,IACjDG,KAAQH,GAGV,OAFA,EAAAH,YAAYK,GAAGH,EAASK,GAEjB,KACL,EAAAP,YAAYS,eAAeP,EAASK,EAAa,CAErD,EACA,IAAAG,CAAKR,EAAmBI,GACtB,EAAAN,YAAYU,KAAKR,GAAS,CAACM,KAAWL,IAASG,KAAQH,IACzD,I,OAIJ,EAAAQ,cAAcC,kBAAkB,WAAYb,G","sources":["webpack:///webpack/universalModuleDefinition","webpack:///external node-commonjs \"electron\"","webpack:///./src/main/preload.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, () => {\nreturn ","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","// Disable no-unused-vars, broken for spread args\n/* eslint no-unused-vars: off */\nimport { contextBridge, ipcRenderer, IpcRendererEvent } from 'electron';\n\nexport type Channels = 'ipc-example';\n\nconst electronHandler = {\n  ipcRenderer: {\n    sendMessage(channel: Channels, ...args: unknown[]) {\n      ipcRenderer.send(channel, ...args);\n    },\n    on(channel: Channels, func: (...args: unknown[]) => void) {\n      const subscription = (_event: IpcRendererEvent, ...args: unknown[]) =>\n        func(...args);\n      ipcRenderer.on(channel, subscription);\n\n      return () => {\n        ipcRenderer.removeListener(channel, subscription);\n      };\n    },\n    once(channel: Channels, func: (...args: unknown[]) => void) {\n      ipcRenderer.once(channel, (_event, ...args) => func(...args));\n    },\n  },\n};\n\ncontextBridge.exposeInMainWorld('electron', electronHandler);\n\nexport type ElectronHandler = typeof electronHandler;\n"],"names":["root","factory","exports","module","define","amd","a","i","global","require","electronHandler","ipcRenderer","sendMessage","channel","args","send","on","func","subscription","_event","removeListener","once","contextBridge","exposeInMainWorld"],"sourceRoot":""}